<?php

namespace UUP\Exchange\Types;

class RuleFieldURIType
{

        const __default = 'RuleId';
        const RuleId = 'RuleId';
        const DisplayName = 'DisplayName';
        const Priority = 'Priority';
        const IsNotSupported = 'IsNotSupported';
        const Actions = 'Actions';
        const ConditionCategories = 'Condition:Categories';
        const ConditionContainsBodyStrings = 'Condition:ContainsBodyStrings';
        const ConditionContainsHeaderStrings = 'Condition:ContainsHeaderStrings';
        const ConditionContainsRecipientStrings = 'Condition:ContainsRecipientStrings';
        const ConditionContainsSenderStrings = 'Condition:ContainsSenderStrings';
        const ConditionContainsSubjectOrBodyStrings = 'Condition:ContainsSubjectOrBodyStrings';
        const ConditionContainsSubjectStrings = 'Condition:ContainsSubjectStrings';
        const ConditionFlaggedForAction = 'Condition:FlaggedForAction';
        const ConditionFromAddresses = 'Condition:FromAddresses';
        const ConditionFromConnectedAccounts = 'Condition:FromConnectedAccounts';
        const ConditionHasAttachments = 'Condition:HasAttachments';
        const ConditionImportance = 'Condition:Importance';
        const ConditionIsApprovalRequest = 'Condition:IsApprovalRequest';
        const ConditionIsAutomaticForward = 'Condition:IsAutomaticForward';
        const ConditionIsAutomaticReply = 'Condition:IsAutomaticReply';
        const ConditionIsEncrypted = 'Condition:IsEncrypted';
        const ConditionIsMeetingRequest = 'Condition:IsMeetingRequest';
        const ConditionIsMeetingResponse = 'Condition:IsMeetingResponse';
        const ConditionIsNDR = 'Condition:IsNDR';
        const ConditionIsPermissionControlled = 'Condition:IsPermissionControlled';
        const ConditionIsReadReceipt = 'Condition:IsReadReceipt';
        const ConditionIsSigned = 'Condition:IsSigned';
        const ConditionIsVoicemail = 'Condition:IsVoicemail';
        const ConditionItemClasses = 'Condition:ItemClasses';
        const ConditionMessageClassifications = 'Condition:MessageClassifications';
        const ConditionNotSentToMe = 'Condition:NotSentToMe';
        const ConditionSentCcMe = 'Condition:SentCcMe';
        const ConditionSentOnlyToMe = 'Condition:SentOnlyToMe';
        const ConditionSentToAddresses = 'Condition:SentToAddresses';
        const ConditionSentToMe = 'Condition:SentToMe';
        const ConditionSentToOrCcMe = 'Condition:SentToOrCcMe';
        const ConditionSensitivity = 'Condition:Sensitivity';
        const ConditionWithinDateRange = 'Condition:WithinDateRange';
        const ConditionWithinSizeRange = 'Condition:WithinSizeRange';
        const ExceptionCategories = 'Exception:Categories';
        const ExceptionContainsBodyStrings = 'Exception:ContainsBodyStrings';
        const ExceptionContainsHeaderStrings = 'Exception:ContainsHeaderStrings';
        const ExceptionContainsRecipientStrings = 'Exception:ContainsRecipientStrings';
        const ExceptionContainsSenderStrings = 'Exception:ContainsSenderStrings';
        const ExceptionContainsSubjectOrBodyStrings = 'Exception:ContainsSubjectOrBodyStrings';
        const ExceptionContainsSubjectStrings = 'Exception:ContainsSubjectStrings';
        const ExceptionFlaggedForAction = 'Exception:FlaggedForAction';
        const ExceptionFromAddresses = 'Exception:FromAddresses';
        const ExceptionFromConnectedAccounts = 'Exception:FromConnectedAccounts';
        const ExceptionHasAttachments = 'Exception:HasAttachments';
        const ExceptionImportance = 'Exception:Importance';
        const ExceptionIsApprovalRequest = 'Exception:IsApprovalRequest';
        const ExceptionIsAutomaticForward = 'Exception:IsAutomaticForward';
        const ExceptionIsAutomaticReply = 'Exception:IsAutomaticReply';
        const ExceptionIsEncrypted = 'Exception:IsEncrypted';
        const ExceptionIsMeetingRequest = 'Exception:IsMeetingRequest';
        const ExceptionIsMeetingResponse = 'Exception:IsMeetingResponse';
        const ExceptionIsNDR = 'Exception:IsNDR';
        const ExceptionIsPermissionControlled = 'Exception:IsPermissionControlled';
        const ExceptionIsReadReceipt = 'Exception:IsReadReceipt';
        const ExceptionIsSigned = 'Exception:IsSigned';
        const ExceptionIsVoicemail = 'Exception:IsVoicemail';
        const ExceptionItemClasses = 'Exception:ItemClasses';
        const ExceptionMessageClassifications = 'Exception:MessageClassifications';
        const ExceptionNotSentToMe = 'Exception:NotSentToMe';
        const ExceptionSentCcMe = 'Exception:SentCcMe';
        const ExceptionSentOnlyToMe = 'Exception:SentOnlyToMe';
        const ExceptionSentToAddresses = 'Exception:SentToAddresses';
        const ExceptionSentToMe = 'Exception:SentToMe';
        const ExceptionSentToOrCcMe = 'Exception:SentToOrCcMe';
        const ExceptionSensitivity = 'Exception:Sensitivity';
        const ExceptionWithinDateRange = 'Exception:WithinDateRange';
        const ExceptionWithinSizeRange = 'Exception:WithinSizeRange';
        const ActionAssignCategories = 'Action:AssignCategories';
        const ActionCopyToFolder = 'Action:CopyToFolder';
        const ActionDelete = 'Action:Delete';
        const ActionForwardAsAttachmentToRecipients = 'Action:ForwardAsAttachmentToRecipients';
        const ActionForwardToRecipients = 'Action:ForwardToRecipients';
        const ActionMarkImportance = 'Action:MarkImportance';
        const ActionMarkAsRead = 'Action:MarkAsRead';
        const ActionMoveToFolder = 'Action:MoveToFolder';
        const ActionPermanentDelete = 'Action:PermanentDelete';
        const ActionRedirectToRecipients = 'Action:RedirectToRecipients';
        const ActionSendSMSAlertToRecipients = 'Action:SendSMSAlertToRecipients';
        const ActionServerReplyWithMessage = 'Action:ServerReplyWithMessage';
        const ActionStopProcessingRules = 'Action:StopProcessingRules';
        const IsEnabled = 'IsEnabled';
        const IsInError = 'IsInError';
        const Conditions = 'Conditions';
        const Exceptions = 'Exceptions';

}
